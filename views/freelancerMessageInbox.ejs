<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>FreelancerMessageInbox</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

  <link rel="stylesheet" href="/my-css/style.css">
  <link href="/home/css/style.css" rel="stylesheet" />

  <link rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/material-design-iconic-font@2.2.0/dist/css/material-design-iconic-font.min.css">

  <link rel="stylesheet" href="/freelancer-nav-css/style.css">
  <style>
    .list-group-item:hover {
      background-color: #f8f9fa;
      transform: translateY(-1px);
      transition: all 0.2s ease;
    }

    .list-group-item {
      border-left: 4px solid transparent;
      transition: all 0.2s ease;
    }

    .list-group-item:hover {
      border-left-color: #007bff;
    }

    .unread-badge {
      animation: pulse 2s infinite;
    }

    @keyframes pulse {
      0% {
        transform: scale(1);
      }

      50% {
        transform: scale(1.1);
      }

      100% {
        transform: scale(1);
      }
    }
  </style>
</head>

<body>
  <%-include("./layouts/FreelancerDashboardNavber") %>
    <%-include("./layouts/flash") %>

      <div style="margin-top: 100px;" class="container main-content">
        <div class="row container-fluid">
          <div class="col-12">
            <div class="card">
              <div class="card-header">
                <h3><i class="fas fa-envelope me-2"></i>Messages</h3>
              </div>
              <div class="card-body">
                <% if (conversations.length===0) { %>
                  <div class="text-center py-5">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No messages yet</h5>
                    <p class="text-muted">Start a conversation by working on a project!</p>
                  </div>
                  <% } else { %>
                    <div class="list-group">
                      <% conversations.forEach(conversation=> { %>
                        <a href="/freelancer/messages/<%= conversation.job._id %>"
                          class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                          <!-- id="convo-<%= conversation.job._id %>">ðŸ”„ UPDATED: Added id -->
                          <div class="d-flex align-items-center">
                            <div class="me-3">
                              <i class="fas fa-briefcase fa-2x text-primary"></i>
                            </div>
                            <div>
                              <h6 class="mb-1">
                                <%= conversation.job.title %>
                              </h6>
                              <p class="mb-1 text-muted">
                                <small>
                                  <i class="fas fa-user me-1"></i>
                                  <%= conversation.otherUser.name %>
                                    (<%= conversation.otherUser.email %>)
                                </small>
                              </p>
                              <p class="mb-0 text-muted">
                                <small>
                                  <i class="fas fa-comment me-1"></i>
                                  <%= conversation.lastMessage.content.length> 50 ?
                                    conversation.lastMessage.content.substring(0, 50) + '...' :
                                    conversation.lastMessage.content %>
                                </small>
                              </p>
                            </div>
                          </div>
                          <div class="text-end">
                            <div class="text-muted small">
                              <%= new Date(conversation.lastMessage.createdAt).toLocaleDateString() %>
                            </div>
                            <% if (conversation.unreadCount> 0) { %>
                              <span class="badge bg-danger rounded-pill unread-badge">
                                <%= conversation.unreadCount %>
                              </span>
                              <% } %>
                          </div>
                        </a>
                        <% }) %>
                    </div>
                    <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="main-content">
  <div class="container-fluid">
      <%-include("./layouts/footer") %>
  </div>

      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

      <!-- JavaScript Libraries -->
      <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
      <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
      <script src="home/lib/easing/easing.min.js"></script>
      <script src="home/lib/owlcarousel/owl.carousel.min.js"></script>
      <script src="home/lib/tempusdominus/js/moment.min.js"></script>
      <script src="home/lib/tempusdominus/js/moment-timezone.min.js"></script>
      <script src="home/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

      <!-- Contact Javascript File -->
      <script src="home/mail/jqBootstrapValidation.min.js"></script>
      <script src="home/mail/contact.js"></script>

      <!-- Template Javascript -->
      <script src="home/js/main.js"></script>


      <!-- Bootstrap JS -->
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const sidebar = document.getElementById('sidebar');
          const mainContent = document.getElementById('mainContent');
          const sidebarToggle = document.getElementById('sidebarToggle');
          const mobileToggle = document.getElementById('mobileToggle');
          const toggleIcon = sidebarToggle.querySelector('i');

          // Desktop sidebar toggle
          sidebarToggle.addEventListener('click', function () {
            sidebar.classList.toggle('collapsed');
            mainContent.classList.toggle('expanded');

            if (sidebar.classList.contains('collapsed')) {
              toggleIcon.className = 'fas fa-chevron-right';
            } else {
              toggleIcon.className = 'fas fa-chevron-left';
            }
          });

          // Mobile sidebar toggle
          mobileToggle.addEventListener('click', function () {
            sidebar.classList.toggle('show');
          });

          // Close sidebar when clicking outside on mobile
          document.addEventListener('click', function (event) {
            if (window.innerWidth <= 768) {
              const isClickInsideSidebar = sidebar.contains(event.target);
              const isClickOnMobileToggle = mobileToggle.contains(event.target);

              if (!isClickInsideSidebar && !isClickOnMobileToggle) {
                sidebar.classList.remove('show');
              }
            }
          });

          // Handle window resize
          window.addEventListener('resize', function () {
            if (window.innerWidth > 768) {
              sidebar.classList.remove('show');
            }
          });

          // Add active class to current nav item
          const currentPath = window.location.pathname;
          const navLinks = document.querySelectorAll('.nav-link');

          navLinks.forEach(link => {
            if (link.getAttribute('href') === currentPath) {
              link.classList.add('active');
            } else {
              link.classList.remove('active');
            }
          });

          // Smooth hover effects
          const navItems = document.querySelectorAll('.nav-item');
          navItems.forEach(item => {
            item.addEventListener('mouseenter', function () {
              this.style.transform = 'translateX(5px)';
            });

            item.addEventListener('mouseleave', function () {
              this.style.transform = 'translateX(0)';
            });
          });

          // Top Navbar Dropdown Functionality
          const notificationsBtn = document.getElementById('notificationsBtn');
          const messagesBtn = document.getElementById('messagesBtn');
          const userMenuBtn = document.getElementById('userMenuBtn');
          const notificationsDropdown = document.getElementById('notificationsDropdown');
          const messagesDropdown = document.getElementById('messagesDropdown');
          const userDropdown = document.getElementById('userDropdown');

          // Notifications dropdown
          notificationsBtn.addEventListener('click', function (e) {
            e.stopPropagation();
            notificationsDropdown.classList.toggle('show');
            messagesDropdown.classList.remove('show');
            userDropdown.classList.remove('show');
          });

          // Messages dropdown
          messagesBtn.addEventListener('click', function (e) {
            e.stopPropagation();
            messagesDropdown.classList.toggle('show');
            notificationsDropdown.classList.remove('show');
            userDropdown.classList.remove('show');
          });

          // User menu dropdown
          userMenuBtn.addEventListener('click', function (e) {
            e.stopPropagation();
            userDropdown.classList.toggle('show');
            notificationsDropdown.classList.remove('show');
            messagesDropdown.classList.remove('show');
          });

          // Close dropdowns when clicking outside
          document.addEventListener('click', function (event) {
            if (!notificationsBtn.contains(event.target) && !notificationsDropdown.contains(event.target)) {
              notificationsDropdown.classList.remove('show');
            }
            if (!messagesBtn.contains(event.target) && !messagesDropdown.contains(event.target)) {
              messagesDropdown.classList.remove('show');
            }
            if (!userMenuBtn.contains(event.target) && !userDropdown.contains(event.target)) {
              userDropdown.classList.remove('show');
            }
          });

          // Search functionality
          const searchInput = document.querySelector('.search-input');
          const searchBtn = document.querySelector('.search-btn');

          searchBtn.addEventListener('click', function () {
            const searchTerm = searchInput.value.trim();
            if (searchTerm) {
              // Redirect to search page or perform search
              window.location.href = `/freelancer/jobs?search=${encodeURIComponent(searchTerm)}`;
            }
          });

          searchInput.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
              searchBtn.click();
            }
          });

          // Mark all notifications as read
          const markAllReadBtn = document.querySelector('.mark-all-read');
          if (markAllReadBtn) {
            markAllReadBtn.addEventListener('click', function (e) {
              e.preventDefault();
              const unreadItems = document.querySelectorAll('.notification-item.unread');
              unreadItems.forEach(item => {
                item.classList.remove('unread');
              });

              // Update notification badge
              const notificationBadge = notificationsBtn.querySelector('.notification-badge');
              if (notificationBadge) {
                notificationBadge.textContent = '0';
                notificationBadge.style.display = 'none';
              }
            });
          }

          // Add hover effects to dropdown items
          const dropdownItems = document.querySelectorAll('.dropdown-item');
          dropdownItems.forEach(item => {
            item.addEventListener('mouseenter', function () {
              this.style.transform = 'translateX(5px)';
            });

            item.addEventListener('mouseleave', function () {
              this.style.transform = 'translateX(0)';
            });
          });

          // Add smooth animations to notification items
          const notificationItems = document.querySelectorAll('.notification-item, .message-item');
          notificationItems.forEach((item, index) => {
            item.style.animationDelay = `${index * 0.1}s`;
            item.classList.add('fade-in');
          });
        });
      </script>


</body>

</html>